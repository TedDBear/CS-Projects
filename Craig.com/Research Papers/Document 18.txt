b'TS2-tree - An Ef\xef\xac\x81cient Similarity Based Organizationfor\nT\nrajectory Data\nPetkoBakalov\nUniversityof California,\nRiverside\npbakalov@cs.ucr.eduEamonnKeogh\nUniversityof California,\nRiverside\neamonn@cs.ucr.eduVassilisJ.Tsotras\nUniversityof California,\nRiverside\ntsotras@cs.ucr.edu\nABSTRACT\n The increasingly popular GPS technology and the growing amount \nof trajectory data it generates create the need for developing appli-\ncations that ef\xef\xac\x81ciently store and query trajectories of moving ob-\njects. In this paper we introduce TS2 tree, a novel indexing struc-\nture for organizing trajectory data based on similarity between tra-\njectories. TS2treeprovideslowerandupperboundsondistancebe-\ntweentrajectories,basedonwhichweproposeageneralframework\nfor effectively answering a wide range of similarity-based trajec-\ntory queries such as similarity threshold (ST) query andsimilarity\nbest\xef\xac\x81t(SBF)query . Themultifoldreductioninquerycomputation\ntimesandthenumberofI/Ooperationsisdemonstratedthroughan\nextensiveexperimentalevaluation.\nCategories and Subject Descriptors\nH.3.1 [IndexingMethods ]: Information Storage and Retrieval\nGeneral Terms\nAlgorithms, Experimentation, Performance\nKeywords\nIndexing,Similarity,Trajectory\n1. INTRODUCTION\nWith the high availability of GPS devices and advances in com-\nmunications and sensor technology (RFIDs etc.), applications for\nmonitoring and tracking moving objects have emerged. Such ap-\nplicationscreatelargerepositoriesofspatiotemporaldatawhichare\ntrajectorial in nature. Their large volume motivates the need to de-\nvelop ef\xef\xac\x81cient techniques for managing and querying trajectories.\nOne of the most popular trajectory query types focuses on \xef\xac\x81nding\nsimilaritiesbetweentrajectories. Here,thequerytypicallyspeci\xef\xac\x81es\natrajectoryandtheanswercontainsalltrajectoriesintherepository\nthatare"similar"tothegiventrajectory. [6][4]. Spatialsimilarityis\nmeasuredthroughdifferentdistancemetricsde\xef\xac\x81nedfortrajectorial\nThisworkwaspartially supported by NSF grant IIS-0534781.\nPermission to make digital or hard copies of all or part of this work for\npersonal or classroom use is granted without fee provided that copies are\nnot made or distributed for pro\xef\xac\x81t or commercial advantage and that copies\nbearthisnoticeandthefullcitationonthe\xef\xac\x81rstpage. Tocopyotherwise,to\nrepublish,topostonserversortoredistributetolists,requirespriorspeci\xef\xac\x81c\npermission and/or a fee.\nACMGIS\xe2\x80\x9907November7-9, 2007 Seattle, WA\nCopyright2007 ACM978-1-59593-914-2/07/11 ...$5.00.data (e.g Euclidean distance, Manhattan distance etc.) and is use-\nfulinmanymonitoringandsurveillanceapplications. Inthispaper\nwe examine two variations of this problem, namely the similarity\nthreshold (ST) and the similarity best \xef\xac\x81t(SBF) queries discussed\nbelow. Our focus is in developing a novel technique to index tra-\njectories for answering the ST and SBF queries ef\xef\xac\x81ciently.\nConsider the scenario discussed in [4] where an urban planing\ntool is used to measure the bene\xef\xac\x81ts generated from adding extra\nbuslinestoapublictransportationsystem. Inthisscenarioabene\xef\xac\x81t\nis expressed as the number of commuter trajectories in the archive\nwhich are similar to the trajectory of the proposed bus line. Time\nisimportant,sinceabusscheduleshouldfollowtheproposedroute\nat times when commuters are traveling it. In this ST query ex-\nample, the similarity between the bus route and a trajectory from\nthe archive is de\xef\xac\x81ned by their spatial "closeness" expressed by a\nthreshold \xcf\xb5(e.g. for example no further than 3 miles) around the\nbus route. The ST query returns the set of all trajectories which\nare completely covered by the 3 mile envelope crated around the\nproposed bus route. In contrast, a SBF query returns as a result\nthe trajectory from the archive which is "the best \xef\xac\x81t" to the query\ntrajectory.\nThe evaluation of the above queries with existing spatiotempo-\nral indexing techniques, which view a trajectory as a line in the\nn+ 1dimensional space is however computationally expensive\nandinef\xef\xac\x81cient[3][2]. Atrajectoryistypicallydecomposedinseg-\nmentswhicharethenapproximatedbyMinimumBoundingBoxes\n(MBBs) and organized using a multidimensional index structure\n(R-tree). This approach however has various disadvantages: (i)\nTheapproximationofalinesegmentwithaMBBintroducesalarge\namountof"deadspace"andasaresultthediscriminationcapability\noftheindexstructuredeteriorates. (ii)Theindexstructuredoesnot\npreserve a global picture of the trajectory. Instead, the trajectory\nsegments can be scattered in different parts of the index structure.\n(iii) Traditional indexing techniques do not cluster trajectories ac-\ncording to their similarity. The above problems imply that a better\nindexingtechniqueshouldmaintainaglobalviewoveratrajectory\nandatthesametimeuseabettertrajectoryapproximationandper-\nformclustering. Inthispaperweproposeanovelindexingstructure\ncalledTime-Speci\xef\xac\x81cSimilarityTree(TS2Tree)withtheseproper-\nties which make the it a very ef\xef\xac\x81cient organization for evaluating\ntime-speci\xef\xac\x81c similarity queries on trajectories.\n2. PROBLEMDEFINITION\nFor simplicity in the rest of the paper we assume that a moving\nobject trajectory is de\xef\xac\x81ned as a sequence of location/time instant\npairs. Other representations can be easily reduced to this general\nform by interpolation. More formally:\nDe\xef\xac\x81nition 1. A trajectory Tis a sequence of \xe2\x9f\xa8location /time\xe2\x9f\xa9\nProceedings of the 15th International Symposium on Advances in Geographic Information Systems \n                                                                                                                                      ACM GIS 2007\n'
b'pairs:{\xe2\x9f\xa8l1,\nt1\xe2\x9f\xa9, . . . , \xe2\x9f\xa8ln, tn\xe2\x9f\xa9},where li\xe2\x88\x88Rd, ti\xe2\x88\x88N\nHere the location liis addimensional vector. With li.vwe de-\nnote the v-th component of this vector. For our 2-dimensional ex-\namples however we use the li.xandli.yto refer to the xandy\ncoordinates. Assume that we are given trajectory distance function\nD. Having this function, a set of trajectories T \xe2\x89\xa1 { T1, . . . , Tk }\nand a query trajectory Tqthe Similarity Threshold (ST) query and\nthe Similarity Best Fit (SBF) query are de\xef\xac\x81ned as follows:\nDe\xef\xac\x81nition 2. GivenD,T,Tqand a spatial threshold \xcf\xb5, a Simi-\nlarityThresholdqueryreturnsthesetoftrajectories R \xe2\x89\xa1 { Ru, . . . ,\nRv}such that R \xe2\x8a\x82 TandD(Ri, Tq )\xe2\x89\xa4\xcf\xb5,\xe2\x88\x80iwhere Ri\xe2\x88\x88 R.\nDe\xef\xac\x81nition 3. GivenD,TandTq,aSimilarityBestFitqueryre-\nturnstrajectory Rjsuchthat Rj\xe2\x88\x88 TandD(Rj, Tq )\xe2\x89\xa4 D(Ti, Tq )\n,\xe2\x88\x80iwhere Ti\xe2\x88\x88 T.\nIn order to organize the trajectories in the repository for the pur-\nposes of ef\xef\xac\x81cient similarity search we need an approximate repre-\nsentation ofthetrajectoriesandalower-boundingdistancefunction\nde\xef\xac\x81ned over this representation. As is typical in similarity query\nprocessing, we employ a two step query evaluation strategy (for\nbothSTandSBFqueries). Inthe\xef\xac\x81rstphaseweperformearlyprun-\ninginthesetoftrajectories Tusingtheapproximaterepresentation\nand the lower-bounding distance function. In the second step, the\nremainingsmall,approximatesetofcandidatetrajectoriesistested\nagainst the query trajectory Tq, this time using the raw trajectory\ndata.\nFor the purposes of trajectory similarity search we use the sym-\nbolic representation proposed in [1] for trajectories. This method\nutilizes the Piecewise Aggregate Approximation (PAA) [5] which\nwas used to transform a time-series data into a string. The PAA\nalgorithm accepts as input a trajectory of length nof\xe2\x9f\xa8location\n/time\xe2\x9f\xa9pairs and produces as output a trajectory approximation of\nreduced size, say m(m << n ). This is done by dividing the in-\nput sequence into mequi-sized \xe2\x80\x9cframes\xe2\x80\x9d along the temporal axis\nandthespatialvaluescontainedineachframearereplacedbytheir\naverage. More formally:\nDe\xef\xac\x81nition 4. Giventrajectory Ti={< l1, t1>, . . . , < l n, tn>\n}oflength nandatargetlength m\xe2\x89\xaan,PAAproducesanapprox-\nimate trajectory \xc2\xafTi={<\xc2\xafl1, t1>, . . . , < \xc2\xaflm, tm>}where the\nspatialvaluescontainedinsideeachtimeframe [n\nm(i\xe2\x88\x921),n\nmi],1\xe2\x89\xa4\ni\xe2\x89\xa4mare\nreplaced by their arithmetic mean:\n\xe2\x88\x80v\xe2\x88\x88[1;d]\xc2\xafli.v=m\nnn\nmiX\nj=n\nm(i\xe2\x88\x921)+1lj.v\nThe\napproximation produced aboveis then discretized to a sym-\nbolic representation. For this purpose a uniform space grid is used\nwhere a unique label is associated to every discrete grid cell in the\ngrid. The labels are assigned according to the grid cell position in\nthexandyaxisstartingwithlabel(A,A)inthelowerleftcornerof\nthegrid. Eachlabelhas xandycomponents. Byusingthegridcell\nlabel instead of the average spatial location for each frame a tra-\njectory is converted into a symbolic representation (Figure 1). The\nsymbolic representation can formally be de\xef\xac\x81ned as follows:\nDe\xef\xac\x81nition 5. Given a uniform grid with granularity \xcf\x84assign an\nalphabet of symbols A={\xce\xb11, . . . , \xce\xb1 w}such that \xe2\x88\x801\xe2\x89\xa4j\xe2\x89\xa4w:\n[\xcf\x84(j\xe2\x88\x921), \xcf\x84j )\xe2\x86\x92\xce\xb1j(everysymbolisassignedtoauniqueinterval\nof the grid). A trajectory Tiof length ncan be approximated as\na string \xcb\x9cTi=\xe2\x9f\xa8\xcb\x9cl1\xc2\xb7\xc2\xb7\xc2\xb7\xcb\x9clm\xe2\x9f\xa9of length m\xe2\x89\xaan, by replacing every\nvalue \xc2\xafli.vin the m-length PAA approximation of Tiwith symbol\n\xc2\xafli.v=\xce\xb1jsuchthat \xcf\x84(j\xe2\x88\x921)\xe2\x89\xa4\xc2\xafli.v < \xcf\x84j.\n X \nY t \n(2,3) (3,3) (3,2) (4,2) \n1 2 3 4 \nFrames \n Figur\ne1:AnobjecttrajectorywithitsPAArepresentation;thestring\nrepresentationis: (2,3)(3,3)(3,2)(4,2).\n X t \n2 4 6 8 \nY 1 3 5 7 \nFigur\ne2:Trajectoryenvelope\nGiven a trajectory distance function D, for ef\xef\xac\x81cient pruning in\nthe approximation space, we need a distance function \xcb\x9cDin that\nspace, that lower-bounds D. Getting such symbolic distance func-\ntion is simple for many trajectory distance functions (Euclidean,\nManhattan etc.)\n3. THE INDEX STRUCTURE\nWe \xef\xac\x81rst describe the notion of an \xe2\x80\x9cenvelope" which is used to\ncluster symbolic approximations among many similar trajectories.\nThen we discuss how envelopes can be combined hierarchically to\ncreate the TS2 tree.\n3.1 Trajectoryenvelope\nUntilnowwehavetakeneachtrajectory Tiand\xef\xac\x81rstgotitsPAA\napproximation \xc2\xafTiwhichwasthenturnedintoasymbolicrepresen-\ntation \xcb\x9cTi. Thenextstepistoprovideanef\xef\xac\x81cientrepresentationfor\na set of similar trajectories.\nAssumeforsimplicitythatallsymbolicrepresentationsoftrajec-\ntories have the same length m(the extension to cover trajectories\nwith different lengths is straightforward). Consider a set of ktra-\njectory symbolic representations \xcb\x9cT1\xc2\xb7\xc2\xb7\xc2\xb7\xcb\x9cTk. From this set we can\nderive two new sequences of grid labels UandL(each of length\nm) called respectively an upperandlower bound . The Lsequence\nis derived by taking for each position from 1 to mthe smallest x\nand smallest ylabel component on this position from all kstrings.\nTheUstring is derived in a similar way taking for each position\nthe largest xandycomponents.\nUi.x=max(T 1i.x, .., Tk i.x), U i.y=max( T1i.y, .., Tk i.y)\n2'
