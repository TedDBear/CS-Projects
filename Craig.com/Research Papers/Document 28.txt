b'ESM2-Tree: An maintenance efficient authentication data\nstructure in blockchain\nYuzhou Fang\nZhejiang University\nHangzhou, China\nyouyalin22@gmail.comLiang Cai\nZhejiang University\nHangzhou, China\nleoncai@zju.edu.cnWeiwei Qiu\nHangzhou Hyperchain Technology\nCo., Ltd.\nHangzhou, China\nqiuweiwei@hyperchain.cn\nFanglei Huang\nHangzhou Hyperchain Technology\nCo., Ltd.\nHangzhou, China\nfanglei.huang@hyperchain.cnHuaihai Hui\nZhejiang University\nHangzhou, China\nhuihuaihai@ucas.ac.cn\nABSTRACT\nBlockchain technology is gaining broader attention. Owing to its\nimmutability property and byzantine fault-tolerance consensus pro-\ntocol, blockchain offers a brand new trusted data-sharing solution.\nSome researchers use blockchain to drive autonomous collaboration\namong smart devices, which face massive spatial data updates and\nusage. The key challenge lies in designing an authenticated data\nstructure (ADS) that can efficiently process spatial data and queries.\nHowever, the previous schemes could not handle spatial data effi-\nciently or did not consider the efficiency of frequent data updates.\nIn this paper, we take a step toward implementing a maintenance-\nefficient ADS on the blockchain, called ESM2-Tree, which is not\nonly good at processing spatial data but also effective in supporting\nauthenticated spatial queries by partitioning and merging data at\ndifferent granularities. Theoretical analysis and empirical evalua-\ntion validate the performance of our ADS, which reduces the overall\ndata structure maintenance overhead by about 50% in a uniform\ndata distribution scenario.\nCCS CONCEPTS\n\xe2\x80\xa2Information systems \xe2\x86\x92Multidimensional range search ;\nSpatial-temporal systems ;\xe2\x80\xa2Theory of computation \xe2\x86\x92Data\nstructures design and analysis ;\xe2\x80\xa2Mathematics of computing \xe2\x86\x92\nTrees .\nKEYWORDS\nBlockchain, Authenticated data structure, maintenance-efficient,\nspatial data, spatial query\nPermission to make digital or hard copies of all or part of this work for personal or\nclassroom use is granted without fee provided that copies are not made or distributed\nfor profit or commercial advantage and that copies bear this notice and the full citation\non the first page. Copyrights for components of this work owned by others than the\nauthor(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or\nrepublish, to post on servers or to redistribute to lists, requires prior specific permission\nand/or a fee. Request permissions from permissions@acm.org.\nSSDBM 2023, July 10\xe2\x80\x9312, 2023, Los Angeles, CA, USA\n\xc2\xa92023 Copyright held by the owner/author(s). Publication rights licensed to ACM.\nACM ISBN 979-8-4007-0746-9/23/07. . . $15.00\nhttps://doi.org/10.1145/3603719.3603721ACM Reference Format:\nYuzhou Fang, Liang Cai, Weiwei Qiu, Fanglei Huang, and Huaihai Hui.\n2023. ESM2-Tree: An maintenance efficient authentication data structure\nin blockchain. In 35th International Conference on Scientific and Statistical\nDatabase Management (SSDBM 2023), July 10\xe2\x80\x9312, 2023, Los Angeles, CA, USA.\nACM, New York, NY, USA, 12 pages. https://doi.org/10.1145/3603719.3603721\n1 INTRODUCTION\nBlockchain technology has been receiving increasing attention from\nall walks of life, such as finance[ 20,29], healthcare[ 18], IoT[ 28],\nsupply chain[ 7], etc. Blockchain is a secure and trusted decen-\ntralized technology based on two security designs: the byzantine\nfault-tolerance consensus and the hash-chain technique. Byzantine\nfault tolerance consensus protocols, such as PoW[ 20] and PBFT[ 2],\nensure secure and transparent peer-to-peer information sharing\nin an untrust network environment. Meanwhile, an authenticated\ndata structure (ADS, e.g., Merkle Hash Tree[ 19]), which is build on\nthe top of the search keys, forms part of hash-chain to guarantee\nthe integrity of data. They together ensure that the data stored\nin the blockchain are immutable and shared trustworthily among\npeers without a trusted third party.\nThe wide use of smart chips and fifth-generation communication\ntechnology makes auto-collaboration among smart devices, such as\nvehicles and drones, possible. The current centralized collaboration\nscheme[ 14] faces single-point bottlenecks and privacy issues, and\nblockchain offers a solution to these problems. In some studies[ 6,\n25], researchers have applied blockchain to secure trusted data\nsharing among vehicles.\nFigure 1 illustrates a blockchain-powered autonomous collabora-\ntive system for smart devices. In this system, smart devices collect\ndata and share it trustfully through the permissioned blockchain.\nCompared to permissionless blockchains, permissioned blockchains\nare more suitable for limited-scale clusters and can achieve lower\nlatency and higher throughput. In contrast, the blockchain provides\nhelp for smart devices, such as verifiable spatial queries, to achieve\ntheir collaborative tasks. This requires the blockchain to maintain\nan ADS that supports spatial data processing and can adapt to\nhighly dynamic environments.\n'
b'SSDBM 2023, July 10\xe2\x80\x9312, 2023, Los Angeles, CA, USA F. Yuzhou et al.\nFigure 1: blockchain based auto-collaboration system\nAn intuitive approach to meet the reqiurement is introducing\nspatial data indexing technology into the blockchain system. How-\never, today\xe2\x80\x99s mainstream on-chain ADSs, such as MPT (Merkle\nPatricia Tree)[ 4] and JMT (Jellyfish Merkle Tree)[ 9], only support\ndictionary tree-based account indexing. Some studies[ 17,22,23]\nhave empowered blockchains with spatial data processing capabili-\nties through this approach but are limited only to the block scope\nand thus cannot efficiently process spatial data from a global view.\nRestricting spatial indexing to blocks also makes these methods\nmore suitable for relatively static application scenarios.\nAt the same time, existing authenticated spatial indexing struc-\ntures, such as MRT[ 31], face two main challenges: (i) an insertion\nentails updating hashes of all ancestor nodes. (ii) an insertion may\nlead to a recursive structural adjustment. Some other researchers\nhave proposed a maintenance-efficient ADS, Gem2-tree[ 34], for\nblockchain. However, Gem2-tree only considers range queries for\none-dimensional data.\nTo this end, we propose a new ADS, called Efficient Spatial\nMerkle Merge Tree (ESM2-Tree), that can be efficiently maintained\nin the blockchain while effectively supporting authenticated spatial\nqueries. The ESM2-Tree is inspired by the Gas-Efficient Merkle\nMerge Tree (Gem2-tree)[ 34]. Similar to Gem2-tree, instead of main-\ntaining a single complete tree structure, ESM2-Tree maintains a\nset of partial trees at different granularities that can be gracefully\nmerged as more data is inserted. This helps to reduce the update\ncost. To further reduce the insertion cost, we propose a batched\noptimization method using the STLT (Small Tree Large Tree)[ 3]\ntechnique.\nTo summarize, this paper\xe2\x80\x99s contributions are as follows:\n\xe2\x80\xa2We propose a new ADS, ESM2-Tree. By the way of parti-\ntioning, we can significantly reduce the update cost. Then,\nwe propose a batch insert optimization using the STLT tech-\nnique to further reduce the cost of insertion.\n\xe2\x80\xa2We conduct theoretical analysis and empirical evaluation\nto validate the performance of the proposed ADS. The ex-\nperimental results show that our proposed ADS reduces the\nconstruction time by about 50% compared to the conven-\ntional method.\nThe rest of the paper is organized as follows. Section 2 introduces\nsome related works. Section 3 discusses the baseline method and\nproposes ESM2-Tree. Section 4 introduces the main data structure\nmodification operations of ESM2-Tree. Section 5 introduces theauthenticated spatial query in ESM2-Tree. Section 6 discusses the\ncost analysis about ESM2-Tree. Section 7 presents the experimental\nresults and the paper is concluded in Section 8.\n2 RELATED WORK\n2.1 Merkle Hash Tree\nMerkle Hash Tree (MHT) is an Authenticated Data Structure widely\nused in blockchain. MHT was first proposed by Merkle[ 19] and is\na bottom-up binary tree consisting of hashes (or digests). Figure 2\nshows an example of MHT. Each leaf node in the MHT stores data,\nand each internal node stores the hash value, which is calculated\nfrom its two children (e.g., \xe2\x84\x8e13=\xe2\x84\x8e(\xe2\x84\x8e9||\xe2\x84\x8e10), where "||" denotes\nstring concatenation). Due to the collision resistance property of\nthe cryptographic hash function, the root hash of the MHT can be\nused to verify the integrity of all data stored in the leaf nodes.\nFigure 2: example of MHT\nMHT can support verifiable queries on the blockchain. The MHT\nprovides proof called a verification object (VO) in a verifiable query.\nThe VO contains the results of the query and all hashes necessary\nto reconstruct the root hash. The querier can verify the integrity of\nthe obtained data by recalculating the root hash. For example, for\na query\xf0\x9d\x91\x84with a query result of {\xf0\x9d\x91\x913},\xf0\x9d\x91\x89\xf0\x9d\x91\x82={\xf0\x9d\x91\x913,\xe2\x84\x8e4,\xe2\x84\x8e9,\xe2\x84\x8e14}can\nbe obtained (the gray part in Figure 2). The verifier can recompute\nand compare the root hash \xe2\x84\x8e\xf0\x9d\x91\x9f\xf0\x9d\x91\x9c\xf0\x9d\x91\x9c\xf0\x9d\x91\xa1=\xe2\x84\x8e(\xe2\x84\x8e(\xe2\x84\x8e9||\xe2\x84\x8e(\xe2\x84\x8e(\xf0\x9d\x91\x913)||\xe2\x84\x8e4))||\xe2\x84\x8e14)to\nprove that the query result has not been tampered with.\nMHT is widely used in blockchain systems for non-membership\nproof. One of the prominent research is to extend the concept of\nMHT to dictionary trees, such as Merkle Patricia Tree (MPT)[ 4] and\nSparse Merkle Tree (SMT)[ 33]. They use the account address as the\nsearch key and therefore gain historical independence[ 21]. Jellyfish\nMerkle Tree (JMT)[ 9] is a physical storage-optimized version of\nSMT. Other studies[ 5] focus on the role of MHT in verifiable range\nqueries for one-dimensional data. Merkle B-tree (MB-tree)[ 15] ex-\ntends the concept of MHT to B-tree, thus achieving good disk\naccess and range query efficiency. In addition, there are researches\non extending MHT to a streaming environment to verify streaming\ndata[ 16,26] or extending MHT to a P2P network environment for\ndata verification[ 1,27]. Unfortunately, researches in this direction\ncannot effectively solve the problems encountered in this paper.\n2.2 MHT Extension\nMHT is also extended to the high-dimensional data structure to\nrealize verifiable range queries on high-dimensional data. Merkle\nR-tree (MR-tree)[ 31] extends the concept of MHT to R*-tree. R*-\ntree is a variant of R-tree, first proposed by Guttman[ 10], and is'
